# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]
dotnet_analyzer_diagnostic.category-CodeQuality.severity = true
#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = true:warning
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_property = true:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = false:warning
dotnet_style_predefined_type_for_member_access = false:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# Expression-level preferences
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_namespace_match_folder = true:warning
dotnet_style_null_propagation = true:none
dotnet_style_object_initializer = true:warning
dotnet_style_operator_placement_when_wrapping = beginning_of_line:warning
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_compound_assignment = false:warning
dotnet_style_prefer_conditional_expression_over_assignment = false:warning
dotnet_style_prefer_conditional_expression_over_return = false:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_prefer_simplified_interpolation = true:warning

# Field preferences
dotnet_style_readonly_field = true:none

# Parameter preferences
dotnet_code_quality_unused_parameters = all

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = all

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = false:warning
dotnet_style_allow_statement_immediately_after_block_experimental = true:warning

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true:warning
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning

# Expression-bodied members
csharp_style_expression_bodied_accessors = false:warning
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_indexers = false:warning
csharp_style_expression_bodied_lambdas = false:warning
csharp_style_expression_bodied_local_functions = false:warning
csharp_style_expression_bodied_methods = false:warning
csharp_style_expression_bodied_operators = false:warning
csharp_style_expression_bodied_properties = false:warning

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_extended_property_pattern = true:warning
csharp_style_prefer_not_pattern = true:warning
csharp_style_prefer_pattern_matching = false:warning
csharp_style_prefer_switch_expression = false:warning

# Null-checking preferences
csharp_style_conditional_delegate_call = true
csharp_style_prefer_parameter_null_checking = true

# Modifier preferences
csharp_prefer_static_local_function = true:warning
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = true:warning
csharp_prefer_simple_using_statement = true:warning
csharp_style_namespace_declarations = block_scoped:warning
csharp_style_prefer_method_group_conversion = true:warning

# Expression-level preferences
csharp_prefer_simple_default_expression = true:warning
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_implicit_object_creation_when_type_is_apparent = false:warning
csharp_style_inlined_variable_declaration = true:warning
csharp_style_prefer_index_operator = true:none
csharp_style_prefer_local_over_anonymous_function = true:warning
csharp_style_prefer_null_check_over_type_check = true:warning
csharp_style_prefer_range_operator = true:none
csharp_style_prefer_tuple_swap = true:warning
csharp_style_throw_expression = true:warning
csharp_style_unused_value_assignment_preference = discard_variable
csharp_style_unused_value_expression_statement_preference = discard_variable

# 'using' directive preferences
csharp_using_directive_placement = inside_namespace:warning

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false:warning
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:warning
csharp_style_allow_embedded_statements_on_same_line_experimental = true:warning

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

### applicable_kinds ###
# * (all)
# namespace
# class
# struct
# interface
# enum
# property
# method
# field
# event
# delegate
# parameter
# type_parameter
# local
# local_function

### applicable_accessibilities ###
# *(all)
# public
# internal or friend
# private
# protected
# protected_internal æˆ– protected_friend
# private_protected
# local

### required_modifiers ###
# abstract or must_inherit
# async
# const
# readonly
# static or shared

### capitalization ###
# pascal_case
# camel_case
# first_word_upper
# all_upper
# all_lower

# namespace
dotnet_naming_rule.namespace_rule.severity = warning
dotnet_naming_rule.namespace_rule.symbols = namespace_symbols
dotnet_naming_rule.namespace_rule.style = namespace_style

dotnet_naming_symbols.namespace_symbols.applicable_kinds = namespace
dotnet_naming_symbols.namespace_symbols.applicable_accessibilities = *
dotnet_naming_symbols.namespace_symbols.required_modifiers = 

dotnet_naming_style.namespace_style.required_prefix = 
dotnet_naming_style.namespace_style.required_suffix = 
dotnet_naming_style.namespace_style.word_separator = 
dotnet_naming_style.namespace_style.capitalization = pascal_case

# class
dotnet_naming_rule.class_rule.severity = warning
dotnet_naming_rule.class_rule.symbols = class_symbols
dotnet_naming_rule.class_rule.style = class_style

dotnet_naming_symbols.class_symbols.applicable_kinds = class
dotnet_naming_symbols.class_symbols.applicable_accessibilities = *
dotnet_naming_symbols.class_symbols.required_modifiers = 

dotnet_naming_style.class_style.required_prefix = 
dotnet_naming_style.class_style.required_suffix = 
dotnet_naming_style.class_style.word_separator = 
dotnet_naming_style.class_style.capitalization = pascal_case, camel_case

# struct
dotnet_naming_rule.struct_rule.severity = warning
dotnet_naming_rule.struct_rule.symbols = struct_symbols
dotnet_naming_rule.struct_rule.style = struct_style

dotnet_naming_symbols.struct_symbols.applicable_kinds = struct
dotnet_naming_symbols.struct_symbols.applicable_accessibilities = *
dotnet_naming_symbols.struct_symbols.required_modifiers = 

dotnet_naming_style.struct_style.required_prefix = 
dotnet_naming_style.struct_style.required_suffix = 
dotnet_naming_style.struct_style.word_separator = 
dotnet_naming_style.struct_style.capitalization = pascal_case, camel_case

# interface
dotnet_naming_rule.interface_rule.severity = warning
dotnet_naming_rule.interface_rule.symbols = interface_symbols
dotnet_naming_rule.interface_rule.style = interface_style

dotnet_naming_symbols.interface_symbols.applicable_kinds = interface
dotnet_naming_symbols.interface_symbols.applicable_accessibilities = *
dotnet_naming_symbols.interface_symbols.required_modifiers = 

dotnet_naming_style.interface_style.required_prefix = I
dotnet_naming_style.interface_style.required_suffix = 
dotnet_naming_style.interface_style.word_separator = 
dotnet_naming_style.interface_style.capitalization = pascal_case

# enum
dotnet_naming_rule.enum_rule.severity = warning
dotnet_naming_rule.enum_rule.symbols = enum_symbols
dotnet_naming_rule.enum_rule.style = enum_style

dotnet_naming_symbols.enum_symbols.applicable_kinds = enum
dotnet_naming_symbols.enum_symbols.applicable_accessibilities = *
dotnet_naming_symbols.enum_symbols.required_modifiers = 

dotnet_naming_style.enum_style.required_prefix = E
dotnet_naming_style.enum_style.required_suffix = 
dotnet_naming_style.enum_style.word_separator = 
dotnet_naming_style.enum_style.capitalization = pascal_case

# property
dotnet_naming_rule.property_rule.severity = warning
dotnet_naming_rule.property_rule.symbols = property_symbols
dotnet_naming_rule.property_rule.style = property_style

dotnet_naming_symbols.property_symbols.applicable_kinds = property
dotnet_naming_symbols.property_symbols.applicable_accessibilities = *
dotnet_naming_symbols.property_symbols.required_modifiers = 

dotnet_naming_style.property_style.required_prefix = 
dotnet_naming_style.property_style.required_suffix = 
dotnet_naming_style.property_style.word_separator = 
dotnet_naming_style.property_style.capitalization = pascal_case, camel_case

# method
dotnet_naming_rule.method_rule.severity = warning
dotnet_naming_rule.method_rule.symbols = method_symbols
dotnet_naming_rule.method_rule.style = method_style

dotnet_naming_symbols.method_symbols.applicable_kinds = method
dotnet_naming_symbols.method_symbols.applicable_accessibilities = *
dotnet_naming_symbols.method_symbols.required_modifiers = 

dotnet_naming_style.method_style.required_prefix = 
dotnet_naming_style.method_style.required_suffix = 
dotnet_naming_style.method_style.word_separator = 
dotnet_naming_style.method_style.capitalization = pascal_case, camel_case

# async method
dotnet_naming_rule.async_method_rule.severity = warning
dotnet_naming_rule.async_method_rule.symbols = async_method_symbols
dotnet_naming_rule.async_method_rule.style = async_method_style

dotnet_naming_symbols.async_method_symbols.applicable_kinds = method
dotnet_naming_symbols.async_method_symbols.applicable_accessibilities = *
dotnet_naming_symbols.async_method_symbols.required_modifiers = async

dotnet_naming_style.async_method_style.required_prefix = 
dotnet_naming_style.async_method_style.required_suffix = Async
dotnet_naming_style.async_method_style.word_separator = 
dotnet_naming_style.async_method_style.capitalization = pascal_case

# field
dotnet_naming_rule.field_rule.severity = warning
dotnet_naming_rule.field_rule.symbols = field_symbols
dotnet_naming_rule.field_rule.style = field_style

dotnet_naming_symbols.field_symbols.applicable_kinds = field
dotnet_naming_symbols.field_symbols.applicable_accessibilities = *
dotnet_naming_symbols.field_symbols.required_modifiers = 

dotnet_naming_style.field_style.required_prefix = 
dotnet_naming_style.field_style.required_suffix = 
dotnet_naming_style.field_style.word_separator = 
dotnet_naming_style.field_style.capitalization = pascal_case, camel_case

# event
dotnet_naming_rule.event_rule.severity = warning
dotnet_naming_rule.event_rule.symbols = event_symbols
dotnet_naming_rule.event_rule.style = event_style

dotnet_naming_symbols.event_symbols.applicable_kinds = event
dotnet_naming_symbols.event_symbols.applicable_accessibilities = *
dotnet_naming_symbols.event_symbols.required_modifiers = 

dotnet_naming_style.event_style.required_prefix = 
dotnet_naming_style.event_style.required_suffix = 
dotnet_naming_style.event_style.word_separator = 
dotnet_naming_style.event_style.capitalization = pascal_case, camel_case

# delegate
dotnet_naming_rule.delegate_rule.severity = warning
dotnet_naming_rule.delegate_rule.symbols = delegate_symbols
dotnet_naming_rule.delegate_rule.style = delegate_style

dotnet_naming_symbols.delegate_symbols.applicable_kinds = delegate
dotnet_naming_symbols.delegate_symbols.applicable_accessibilities = *
dotnet_naming_symbols.delegate_symbols.required_modifiers = 

dotnet_naming_style.delegate_style.required_prefix = 
dotnet_naming_style.delegate_style.required_suffix = 
dotnet_naming_style.delegate_style.word_separator = 
dotnet_naming_style.delegate_style.capitalization = pascal_case, camel_case

# parameter
dotnet_naming_rule.parameter_rule.severity = warning
dotnet_naming_rule.parameter_rule.symbols = parameter_symbols
dotnet_naming_rule.parameter_rule.style = parameter_style

dotnet_naming_symbols.parameter_symbols.applicable_kinds = parameter
dotnet_naming_symbols.parameter_symbols.applicable_accessibilities = *
dotnet_naming_symbols.parameter_symbols.required_modifiers = 

dotnet_naming_style.parameter_style.required_prefix = 
dotnet_naming_style.parameter_style.required_suffix = 
dotnet_naming_style.parameter_style.word_separator = 
dotnet_naming_style.parameter_style.capitalization = camel_case

# type_parameter
dotnet_naming_rule.type_parameter_rule.severity = warning
dotnet_naming_rule.type_parameter_rule.symbols = type_parameter_symbols
dotnet_naming_rule.type_parameter_rule.style = type_parameter_style

dotnet_naming_symbols.type_parameter_symbols.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter_symbols.applicable_accessibilities = *
dotnet_naming_symbols.type_parameter_symbols.required_modifiers = 

dotnet_naming_style.type_parameter_style.required_prefix = T
dotnet_naming_style.type_parameter_style.required_suffix = 
dotnet_naming_style.type_parameter_style.word_separator = 
dotnet_naming_style.type_parameter_style.capitalization = pascal_case

# local
dotnet_naming_rule.local_rule.severity = warning
dotnet_naming_rule.local_rule.symbols = local_symbols
dotnet_naming_rule.local_rule.style = local_style

dotnet_naming_symbols.local_symbols.applicable_kinds = local
dotnet_naming_symbols.local_symbols.applicable_accessibilities = *
dotnet_naming_symbols.local_symbols.required_modifiers = 

dotnet_naming_style.local_style.required_prefix = 
dotnet_naming_style.local_style.required_suffix = 
dotnet_naming_style.local_style.word_separator = 
dotnet_naming_style.local_style.capitalization = camel_case

# local_function
dotnet_naming_rule.local_function_rule.severity = warning
dotnet_naming_rule.local_function_rule.symbols = local_function_symbols
dotnet_naming_rule.local_function_rule.style = local_function_style

dotnet_naming_symbols.local_function_symbols.applicable_kinds = local_function
dotnet_naming_symbols.local_function_symbols.applicable_accessibilities = *
dotnet_naming_symbols.local_function_symbols.required_modifiers = 

dotnet_naming_style.local_function_style.required_prefix = 
dotnet_naming_style.local_function_style.required_suffix = 
dotnet_naming_style.local_function_style.word_separator = 
dotnet_naming_style.local_function_style.capitalization = camel_case